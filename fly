--// Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character, humanoid, humanoidRootPart

--// Trạng thái
local invisible = false
local noclip = false
local flying = false
local speedBoost = false
local jumpBoost = false
local flySpeed = 50

--// Body movers cho fly
local bodyVelocity, bodyGyro

--// WalkSpeed/JumpHeight gốc
local normalWalkSpeed = 16
local boostedWalkSpeed = 100
local normalJumpHeight = 7.2  -- tương đương JumpPower 50
local boostedJumpHeight = 50  -- nhảy rất cao

--// Cập nhật character khi spawn
local function setupCharacter(char)
	character = char
	humanoid = character:WaitForChild("Humanoid")
	humanoidRootPart = character:WaitForChild("HumanoidRootPart")
end
setupCharacter(player.Character or player.CharacterAdded:Wait())
player.CharacterAdded:Connect(setupCharacter)

--// Invisibility (Full God Ghost)
local function toggleInvisibility(state)
	invisible = state
	for _, obj in pairs(character:GetDescendants()) do
		if obj:IsA("BasePart") then
			obj.Transparency = invisible and 1 or 0
			obj.CanCollide = not invisible
			obj.CastShadow = not invisible
		elseif obj:IsA("Decal") or obj:IsA("SpecialMesh") then
			obj.Transparency = invisible and 1 or 0
		elseif obj:IsA("BillboardGui") or obj:IsA("Highlight") then
			obj.Enabled = not invisible
		elseif obj:IsA("Accessory") and obj:FindFirstChild("Handle") then
			obj.Handle.Transparency = invisible and 1 or 0
		elseif obj:IsA("Tool") and obj:FindFirstChild("Handle") then
			obj.Handle.Transparency = invisible and 1 or 0
		elseif obj:IsA("ParticleEmitter") or obj:IsA("Beam") or obj:IsA("Trail") then
			obj.Enabled = not invisible
		end
	end

	if humanoid then
		humanoid.NameDisplayDistance = invisible and 0 or 100
		humanoid.HealthDisplayDistance = invisible and 0 or 100
		if humanoid:FindFirstChild("DisplayName") then
			humanoid.DisplayName = invisible and "" or player.DisplayName
		end
	end
end

--// Noclip toggle
local function toggleNoclip()
	noclip = not noclip
	if not noclip and character then
		-- trả lại va chạm khi tắt
		for _, part in pairs(character:GetDescendants()) do
			if part:IsA("BasePart") then
				part.CanCollide = true
			end
		end
	end
end

--// Noclip loop
RunService.Stepped:Connect(function()
	if noclip and character then
		for _, part in pairs(character:GetDescendants()) do
			if part:IsA("BasePart") then
				part.CanCollide = false
			end
		end
	end
end)

--// Fly toggle
local function toggleFly()
	flying = not flying
	if flying then
		bodyVelocity = Instance.new("BodyVelocity")
		bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
		bodyVelocity.P = 5000
		bodyVelocity.Velocity = Vector3.new(0,0,0)
		bodyVelocity.Parent = humanoidRootPart

		bodyGyro = Instance.new("BodyGyro")
		bodyGyro.MaxTorque = Vector3.new(400000, 400000, 400000)
		bodyGyro.P = 5000
		bodyGyro.CFrame = humanoidRootPart.CFrame
		bodyGyro.Parent = humanoidRootPart
	else
		if bodyVelocity then bodyVelocity:Destroy() bodyVelocity = nil end
		if bodyGyro then bodyGyro:Destroy() bodyGyro = nil end
	end
end

--// Fly điều khiển (ổn định hover)
RunService.Heartbeat:Connect(function()
	if flying and bodyVelocity and bodyGyro and humanoidRootPart then
		local moveVector = Vector3.new(
			(UserInputService:IsKeyDown(Enum.KeyCode.D) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.A) and 1 or 0),
			(UserInputService:IsKeyDown(Enum.KeyCode.Space) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) and 1 or 0),
			(UserInputService:IsKeyDown(Enum.KeyCode.W) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.S) and 1 or 0)
		)

		local camCF = workspace.CurrentCamera.CFrame
		local moveDir = camCF.RightVector * moveVector.X + camCF.UpVector * moveVector.Y + camCF.LookVector * moveVector.Z

		if moveDir.Magnitude > 0 then
			bodyVelocity.Velocity = moveDir.Unit * flySpeed
			bodyGyro.CFrame = CFrame.new(humanoidRootPart.Position, humanoidRootPart.Position + moveDir)
		else
			bodyVelocity.Velocity = Vector3.new(0, 0.1, 0) -- hover
			bodyGyro.CFrame = workspace.CurrentCamera.CFrame
		end
	end
end)

--// UI
local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
ScreenGui.Name = "Hub"

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 200, 0, 270)
Frame.Position = UDim2.new(0, 50, 0.5, -135)
Frame.BackgroundColor3 = Color3.fromRGB(35,35,35)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true

local UICorner = Instance.new("UICorner", Frame)
UICorner.CornerRadius = UDim.new(0,10)

local UIListLayout = Instance.new("UIListLayout", Frame)
UIListLayout.Padding = UDim.new(0,5)
UIListLayout.FillDirection = Enum.FillDirection.Vertical
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Top

local UIPadding = Instance.new("UIPadding", Frame)
UIPadding.PaddingTop = UDim.new(0,5)

local function createButton(text, callback)
	local btn = Instance.new("TextButton", Frame)
	btn.Size = UDim2.new(0.9, 0, 0, 30)
	btn.BackgroundColor3 = Color3.fromRGB(50,50,50)
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.Text = text

	local corner = Instance.new("UICorner", btn)
	corner.CornerRadius = UDim.new(0,6)

	btn.MouseButton1Click:Connect(callback)
	return btn
end

-- Buttons
createButton("Toggle Invisible", function()
	toggleInvisibility(not invisible)
end)

createButton("Toggle Noclip", function()
	toggleNoclip()
end)

createButton("Toggle Fly", function()
	toggleFly()
end)

createButton("Fly Speed +", function()
	flySpeed = flySpeed + 10
end)

createButton("Fly Speed -", function()
	flySpeed = math.max(0, flySpeed - 10)
end)

createButton("Super Speed", function()
	speedBoost = not speedBoost
	if humanoid then
		humanoid.WalkSpeed = speedBoost and boostedWalkSpeed or normalWalkSpeed
	end
end)

createButton("High Jump", function()
	jumpBoost = not jumpBoost
	if humanoid then
		humanoid.UseJumpPower = false
		humanoid.JumpHeight = jumpBoost and boostedJumpHeight or normalJumpHeight
	end
	if jumpBoost then
		RunService.Heartbeat:Connect(function()
			if jumpBoost and UserInputService:IsKeyDown(Enum.KeyCode.Space) then
				humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end
		end)
	end
end)
